<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- zapcat, the JMX bridge and Java agent for zabbix -->
    <bean id="zabbixAgent" class="org.kjkoster.zapcat.zabbix.ZabbixAgent" destroy-method="stop" lazy-init="false">
        <!-- 'null' to listen on any available address -->
        <constructor-arg index="0"><null/></constructor-arg>
        <!-- the port listen on, default is '10052' -->
        <constructor-arg index="1" value="${zapcat.port}"/>
    </bean>

    <!-- JMX stuff -->
    <!-- annotation-based metadata jmx beans -->

    <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
        <property name="assembler" ref="assembler"/>
        <property name="namingStrategy" ref="namingStrategy"/>
        <property name="autodetect" value="true"/>
        <property name="beans">
            <util:map>
<!--                <entry key="org.ssh.app.common.monitor:name=c3P0PooledDataSourceMonitorMXBean" value-ref="c3P0PooledDataSourceMonitorMXBean"/>-->
                <entry key="org.ssh.app.common.monitor:name=jvmMonitorMXBean" value-ref="jvmMonitorMXBean"/>
                <entry key="org.ssh.app.common.monitor:name=methodInvocationMonitorMXBean" value-ref="methodInvocationMonitorMXBean"/>
                <entry key="org.ssh.app.common.monitor:name=hibernateStatistics" value-ref="hibernateStatistics"/>
            </util:map>
        </property>
    </bean>

    <bean id="jmxAttributeSource" class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource"/>

    <bean id="namingStrategy" class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
        <property name="attributeSource" ref="jmxAttributeSource"/>
    </bean>

    <bean id="assembler" class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
        <property name="attributeSource" ref="jmxAttributeSource" />
    </bean>

    <!-- only for c3p0 data source -->
<!--    <bean id="c3P0PooledDataSourceMonitorMXBean" class="org.ssh.app.common.monitor.C3P0PooledDataSourceMonitorMXBean" >
        <constructor-arg index="0" ref="dataSource"/>
    </bean>-->

    <!-- JVM information -->
    <bean id="jvmMonitorMXBean" class="org.ssh.app.common.monitor.JvmMonitorMXBeanImpl" />

    <!-- Hibernate in side -->
    <bean id="hibernateStatistics" class="org.hibernate.jmx.StatisticsService">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- method invocation statistics -->
    <bean id="methodInvocationMonitorMXBean" class="org.ssh.app.common.monitor.MethodInvocationMonitorMXBeanImpl" />

    <bean id="methodInvocationInterceptor" class="org.ssh.app.common.monitor.MethodInvocationInterceptor">
        <constructor-arg index="0" ref="methodInvocationMonitorMXBean"/>
    </bean>

    <!-- as for now, we will monitor all service method -->
    <aop:config>
        <!--
        <aop:advisor advice-ref="methodInvocationInterceptor" pointcut="execution(public * org.ssh.app.common.service.CategoryServiceImpl.*(..))"/>
        <aop:advisor advice-ref="methodInvocationInterceptor" pointcut="execution(public * org.ssh.app.common.service.ItemServiceImpl.*(..))" />
        <aop:advisor advice-ref="methodInvocationInterceptor" pointcut="execution(public * org.ssh.app.common.service.OrderServiceImpl.*(..))" />
        <aop:advisor advice-ref="methodInvocationInterceptor" pointcut="execution(public * org.ssh.app.common.service.ProductServiceImpl.*(..))" />
        <aop:advisor advice-ref="methodInvocationInterceptor" pointcut="execution(public * org.ssh.app.common.service.UserServiceImpl.*(..))" />
        <aop:advisor advice-ref="methodInvocationInterceptor" pointcut="execution(public * org.ssh.app.common.service.rest.SecurityServiceImpl.*(..))" />
        <aop:advisor advice-ref="methodInvocationInterceptor" pointcut="execution(public * org.ssh.app.common.service.rest.HjpetstoreServiceImpl.*(..))" />
        -->
    </aop:config>
</beans>
